---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: proxmox-clusterclass-v0.1.0
spec:
  controlPlane:
    namingStrategy:
      template: "{{ .cluster.name }}-control-plane-{{ .random }}"
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: proxmox-clusterclass-v0.1.0-control-plane
    machineInfrastructure:
      ref:
        kind: ProxmoxMachineTemplate
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        name: proxmox-clusterclass-v0.1.0-workertemplate
    machineHealthCheck:
      maxUnhealthy: 100%
      nodeStartupTimeout: 15m
      unhealthyConditions:
        - type: Ready
          status: Unknown
          timeout: 300s
        - type: Ready
          status: "False"
          timeout: 300s
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
      kind: ProxmoxClusterTemplate
      name: proxmox-clusterclass-v0.1.0-clustertemplate
  workers:
    machineDeployments:
      - class: proxmox-worker
        template:
          bootstrap:
            ref:
              apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
              kind: KubeadmConfigTemplate
              name: proxmox-clusterclass-v0.1.0-workertemplate
          infrastructure:
            ref:
              apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
              kind: ProxmoxMachineTemplate
              name: proxmox-clusterclass-v0.1.0-workertemplate
        machineHealthCheck:
          maxUnhealthy: 33%
          nodeStartupTimeout: 15m
          unhealthyConditions:
            - type: Ready
              status: Unknown
              timeout: 300s
            - type: Ready
              status: "False"
              timeout: 300s
        namingStrategy:
           template: "{{ .cluster.name }}-worker-{{ .random }}"
  variables:
    - name: controlPlaneEndpoint
      required: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            host:
              example: 10.10.10.9
              type: string
            port:
              type: integer
              default: 6443
    - name: ipv4Config
      required: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            addresses:
              minItems: 1
              type: array
              items:
                type: string
              default:
              - "10.10.10.10-10.10.10.15"
            prefix:
              type: integer
              default: 24
            gateway:
              type: string
              default: "10.10.10.1"
    - name: dnsServers
      required: true
      schema:
        openAPIV3Schema:
          type: array
          minItems: 1
          items:
            type: string
          default: [8.8.8.8, 8.8.4.4]
          example: [8.8.8.8, 8.8.4.4]
    - name: allowedNodes
      required: false
      schema:
        openAPIV3Schema:
          type: array
          items:
            type: string
          example: ["pve1", "pve2", "pve3"]
    - name: nodeCloneSpec
      required: true
      schema:
        openAPIV3Schema:
          type: object
          required:
          - sourceNode
          properties:
            disks:
              type: object
              properties:
                bootVolume:
                  type: object
                  properties:
                    disk:
                      type: string
                sizeGb:
                  type: integer
                  minimum: 5
                  format: int32
              required:
              - disk
              - sizeGb
            format:
              type: string
              enum: [raw, qcow2, vmdk]
            kubernetesVersion:
              type: string
              default: "1.25.10"
              example: "1.25.10"
            network:
              type: object
              properties:
                additionalDevices:
                  type: array
                  items:
                    type: object
                    properties:
                      bridge:
                        type: string
                      dnsServers:
                        type: array
                        items:
                          type: string
                      ipv4PoolRef:
                        type: object
                        properties:
                          apiGroup:
                            default: ipam.cluster.x-k8s.io
                            type: string
                          kind:
                            default: GlobalInClusterIPPool
                            type: string
                          name:
                            default: shared-inclusterippool
                            type: string
                        required:
                        - kind
                        - name
                      ipv6PoolRef:
                        type: object
                        properties:
                          apiGroup:
                            default: ipam.cluster.x-k8s.io
                            type: string
                          kind:
                            default: GlobalInClusterIPPool
                            type: string
                          name:
                            default: shared-inclusteripv4pool
                            type: string
                        required:
                        - kind
                        - name
                      model:
                        type: string
                        default: virtio
                        enum: [e1000, virtio, rtl8139, vmxnet3]
                      name:
                        minLength: 1
                        type: string
                  required:
                  - bridge
                  - name
                default:
                  type: object
                  properties:
                    bridge:
                      type: string
                    model:
                      type: string
                      default: virtio
                      enum: [e1000, virtio, rtl8139, vmxnet3]
                  required:
                  - bridge
              required:
              - default
            memoryMiB:
              type: integer
              example: 2048
            numCores:
              type: integer
              example: 1
            numSockets:
              type: integer
              example: 1
            sourceNode:
              type: string
              example: pve1
            sshAuthorizedKeys:
              type: array
              items:
                type: string
              default: []
              example: ["ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJPK5kBd7cxXAHZ6UbeE+ysOlSjOFare3fCCZJ3xtXt1 example@capmox","ssh-rsa ..."]
            templateID:
              type: integer
              example: 100
            virtualIPNetworkInterface:
              type: string
              default: ""
              example: "vmbr0"
            vmNetwork:
              type: object
              properties:
                default:
                  type: object
                  properties:
                    bridge:
                      type: string
                      example: vmbr0
                    model:
                      type: string
                      default: virtio
                      example: virtio
                additionalDevices:
                  type: array
                  items:
                    type: object
                    properties:
                      bridge:
                        type: string
                        example: vmbr1
                      model:
                        type: string
                        example: virtio
                      ipv4PoolRef:
                        type: object
                      ipv6PoolRef:
                        type: object
                      dnsServers:
                        type: object
  patches:
  - name: ProxmoxClusterTemplateGeneral
    definitions:
      - selector:
          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
          kind: ProxmoxClusterTemplate
          matchResources:
            infrastructureCluster: true
        jsonPatches:
          - op: add
            path: /spec/template/spec/allowedNodes
            valueFrom:
              variable: allowedNodes
          - op: add
            path: /spec/template/spec/controlPlaneEndpoint/host
            valueFrom:
              variable: controlPlaneEndpoint.host
          - op: add
            path: /spec/template/spec/controlPlaneEndpoint/port
            valueFrom:
              variable: controlPlaneEndpoint.port
          - op: replace
            path: /spec/template/spec/ipv4Config/addresses
            valueFrom:
              variable: ipv4Config.addresses
          - op: replace
            path: /spec/template/spec/ipv4Config/prefix
            valueFrom:
              variable: ipv4Config.prefix
          - op: replace
            path: /spec/template/spec/ipv4Config/gateway
            valueFrom:
              variable: ipv4Config.gateway
          - op: replace
            path: /spec/template/spec/dnsServers
            valueFrom:
              variable: dnsServers
          - op: replace
            path: /spec/template/spec/nodeCloneSpec/sshAuthorizedKeys
            valueFrom:
              variable: nodeCloneSpec.sshAuthorizedKeys
          - op: replace
            path: /spec/template/spec/nodeCloneSpec/virtualIPNetworkInterface
            valueFrom:
              variable: nodeCloneSpec.virtualIPNetworkInterface
          - op: replace
            path: /spec/template/spec/nodeCloneSpec/sourceNode
            valueFrom:
              variable: nodeCloneSpec.sourceNode
  - name: ControlPlaneSetup
    description: "How to bind the Control Plane and what K8S version"
    definitions:
      - selector:
          apiVersion: controlplane.cluster.x-k8s.io/v1beta1
          kind: KubeadmControlPlaneTemplate
          matchResources:
            controlPlane: true
        jsonPatches:
          - op: add
            path: /spec/template/spec/version
            valueFrom:
              variable: nodeCloneSpec.kubernetesVersion
          - op: add
            path: /spec/template/spec/kubeadmConfigSpec/users
            valueFrom:
              template: |
                - name: root
                  sshAuthorizedKeys: {{ .nodeCloneSpec.sshAuthorizedKeys }}
          - op: add
            path: /spec/template/spec/kubeadmConfigSpec/files
            valueFrom:
              template: |
                - owner: root:root
                  path: /etc/kubernetes/manifests/kube-vip.yaml
                  content: |
                    apiVersion: v1
                    kind: Pod
                    metadata:
                      creationTimestamp: null
                      name: kube-vip
                      namespace: kube-system
                    spec:
                      containers:
                      - args:
                        - manager
                        env:
                        - name: cp_enable
                          value: "true"
                        - name: vip_interface
                          value: "{{ .nodeCloneSpec.virtualIPNetworkInterface }}"
                        - name: address
                          value: "{{ .controlPlaneEndpoint.host }}"
                        - name: port
                          value: "6443"
                        - name: vip_arp
                          value: "true"
                        - name: vip_leaderelection
                          value: "true"
                        - name: vip_leaseduration
                          value: "15"
                        - name: vip_renewdeadline
                          value: "10"
                        - name: vip_retryperiod
                          value: "2"
                        image: ghcr.io/kube-vip/kube-vip:v0.5.11
                        imagePullPolicy: IfNotPresent
                        name: kube-vip
                        resources: {}
                        securityContext:
                          capabilities:
                            add:
                            - NET_ADMIN
                            - NET_RAW
                        volumeMounts:
                        - mountPath: /etc/kubernetes/admin.conf
                          name: kubeconfig
                      hostAliases:
                      - hostnames:
                        - kubernetes
                        ip: 127.0.0.1
                      hostNetwork: true
                      volumes:
                      - hostPath:
                          path: /etc/kubernetes/admin.conf
                          type: FileOrCreate
                        name: kubeconfig
  - name: WorkerNodeSetup
    description: "Configure VM Initialisation"
    definitions:
      - selector:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          matchResources:
            machineDeploymentClass:
              names:
              - proxmox-worker
        jsonPatches:
          - op: add
            path: /spec/template/spec/users
            valueFrom:
              template: |
                - name: root
                  sshAuthorizedKeys: {{ .nodeCloneSpec.sshAuthorizedKeys }}
      - selector:
          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
          kind: ProxmoxMachineTemplate
          matchResources:
            controlPlane: true
            machineDeploymentClass:
              names:
              - proxmox-worker
        jsonPatches:
          - op: replace
            path: /spec/template/spec/sourceNode
            valueFrom:
              variable: nodeCloneSpec.sourceNode
          - op: replace
            path: /spec/template/spec/templateID
            valueFrom:
              variable: nodeCloneSpec.templateID
  - name: NodeSockets
    description: "Configure VM Node Sockets"
    enabledIf: "{{ if .nodeCloneSpec.numSockets }}true{{ end }}"
    definitions:
      - selector:
          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
          kind: ProxmoxMachineTemplate
          matchResources:
            controlPlane: true
            machineDeploymentClass:
              names:
              - proxmox-worker
        jsonPatches:
          - op: add
            path: /spec/template/spec/numSockets
            valueFrom:
              variable: nodeCloneSpec.numSockets
  - name: NodeCores
    description: "Configure VM Node Cores"
    enabledIf: "{{ if .nodeCloneSpec.numCores }}true{{ end }}"
    definitions:
      - selector:
          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
          kind: ProxmoxMachineTemplate
          matchResources:
            controlPlane: true
            machineDeploymentClass:
              names:
              - proxmox-worker
        jsonPatches:
          - op: add
            path: /spec/template/spec/numCores
            valueFrom:
              variable: nodeCloneSpec.numCores
  - name: NodeCloneDiskFormat
    description: "Configure Qemu Disk Format"
    enabledIf: "{{ if .nodeCloneSpec.format }}true{{ end }}"
    definitions:
      - selector:
          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
          kind: ProxmoxMachineTemplate
          matchResources:
            controlPlane: true
            machineDeploymentClass:
              names:
              - proxmox-worker
        jsonPatches:
          - op: replace
            path: /spec/template/spec/format
            valueFrom:
              variable: nodeCloneSpec.format
  - name: NodeMem
    description: "Configure Node Memory"
    enabledIf: "{{ if .nodeCloneSpec.memoryMiB }}true{{ end }}"
    definitions:
      - selector:
          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
          kind: ProxmoxMachineTemplate
          matchResources:
            controlPlane: true
            machineDeploymentClass:
              names:
              - proxmox-worker
        jsonPatches:
          - op: add
            path: /spec/template/spec/memoryMiB
            valueFrom:
              variable: nodeCloneSpec.memoryMiB
  - name: NodeDefaultNetwork
    description: "Configure Node Network Adapters"
    enabledIf: "{{ if .nodeCloneSpec.network }}true{{ end }}"
    definitions:
      - selector:
          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
          kind: ProxmoxMachineTemplate
          matchResources:
            controlPlane: true
            machineDeploymentClass:
              names:
              - proxmox-worker
        jsonPatches:
          - op: add
            path: /spec/template/spec/network
            valueFrom:
              variable: nodeCloneSpec.network
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  name: proxmox-clusterclass-v0.1.0-control-plane
spec:
  template:
    spec:
      kubeadmConfigSpec:
        initConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              provider-id: "proxmox://'{{ ds.meta_data.instance_id }}'"
        joinConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              provider-id: "proxmox://'{{ ds.meta_data.instance_id }}'"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: ProxmoxClusterTemplate
metadata:
  name: proxmox-clusterclass-v0.1.0-clustertemplate
spec:
  template:
    spec:
      controlPlaneEndpoint:
        host: 10.10.10.9
        port: 6443
      ipv4Config:
        addresses: [10.10.10.10-10.10.10.20]
        prefix: 24
        gateway: 10.10.10.1
      dnsServers: [8.8.8.8, 8.8.4.4]
      nodeCloneSpec:
        sourceNode: pve1
        sshAuthorizedKeys: []
        kubernetesVersion: 1.25.10
        virtualIPNetworkInterface: ""
---
kind: ProxmoxMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
metadata:
  name: proxmox-clusterclass-v0.1.0-control-plane
spec:
  template:
    spec:
      sourceNode: pve1
      templateID: 100
      format: qcow2
      full: true
---
kind: ProxmoxMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
metadata:
  name: proxmox-clusterclass-v0.1.0-workertemplate
spec:
  template:
    spec:
      sourceNode: pve1
      templateID: 100
      format: qcow2
      full: true
---
kind: KubeadmConfigTemplate
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
metadata:
  name: proxmox-clusterclass-v0.1.0-workertemplate
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            provider-id: "proxmox://'{{ ds.meta_data.instance_id }}'"
